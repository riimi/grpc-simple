// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: count.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol {

  /// <summary>Holder for reflection information generated from count.proto</summary>
  public static partial class CountReflection {

    #region Descriptor
    /// <summary>File descriptor for count.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CountReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgtjb3VudC5wcm90bxIIcHJvdG9jb2waH2dvb2dsZS9wcm90b2J1Zi90aW1l",
            "c3RhbXAucHJvdG8iQQoLSW5jclJlcXVlc3QSCwoDYXBpGAEgASgJEgsKA3Np",
            "ZBgCIAEoCRILCgN1aWQYAyABKAkSCwoDa2V5GAQgASgJItoCCgxJbmNyUmVz",
            "cG9uc2USLQoJdGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBILCgNhcGkYAiABKAkSDAoEY29kZRgDIAEoBRINCgVlcnJvchgE",
            "IAEoCRINCgVjb3VudBgFIAEoBRIPCgdwaWN0dXJlGAYgASgJEgsKA2FnZRgH",
            "IAEoBRIMCgRuYW1lGAggASgJEg4KBmdlbmRlchgJIAEoCRIPCgdjb21wYW55",
            "GAogASgJEg0KBWVtYWlsGAsgASgJEg0KBXBob25lGAwgASgJEg8KB2FkZHJl",
            "c3MYDSABKAkSDQoFYWJvdXQYDiABKAkSEgoKcmVnaXN0ZXJlZBgPIAEoCRIQ",
            "CghsYXRpdHVkZRgQIAEoAhIRCglsb25naXR1ZGUYESABKAISDAoEdGFncxgS",
            "IAMoCRIQCghpc0FjdGl2ZRgTIAEoCDJHCgxDb3VudFNlcnZpY2USNwoESW5j",
            "chIVLnByb3RvY29sLkluY3JSZXF1ZXN0GhYucHJvdG9jb2wuSW5jclJlc3Bv",
            "bnNlIgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.IncrRequest), global::Protocol.IncrRequest.Parser, new[]{ "Api", "Sid", "Uid", "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.IncrResponse), global::Protocol.IncrResponse.Parser, new[]{ "Timestamp", "Api", "Code", "Error", "Count", "Picture", "Age", "Name", "Gender", "Company", "Email", "Phone", "Address", "About", "Registered", "Latitude", "Longitude", "Tags", "IsActive" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IncrRequest : pb::IMessage<IncrRequest> {
    private static readonly pb::MessageParser<IncrRequest> _parser = new pb::MessageParser<IncrRequest>(() => new IncrRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncrRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.CountReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncrRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncrRequest(IncrRequest other) : this() {
      api_ = other.api_;
      sid_ = other.sid_;
      uid_ = other.uid_;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncrRequest Clone() {
      return new IncrRequest(this);
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 1;
    private string api_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Api {
      get { return api_; }
      set {
        api_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sid" field.</summary>
    public const int SidFieldNumber = 2;
    private string sid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sid {
      get { return sid_; }
      set {
        sid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 3;
    private string uid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 4;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncrRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncrRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Api != other.Api) return false;
      if (Sid != other.Sid) return false;
      if (Uid != other.Uid) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Api.Length != 0) hash ^= Api.GetHashCode();
      if (Sid.Length != 0) hash ^= Sid.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Api.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Api);
      }
      if (Sid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sid);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uid);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Api.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Api);
      }
      if (Sid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sid);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncrRequest other) {
      if (other == null) {
        return;
      }
      if (other.Api.Length != 0) {
        Api = other.Api;
      }
      if (other.Sid.Length != 0) {
        Sid = other.Sid;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Api = input.ReadString();
            break;
          }
          case 18: {
            Sid = input.ReadString();
            break;
          }
          case 26: {
            Uid = input.ReadString();
            break;
          }
          case 34: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IncrResponse : pb::IMessage<IncrResponse> {
    private static readonly pb::MessageParser<IncrResponse> _parser = new pb::MessageParser<IncrResponse>(() => new IncrResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncrResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protocol.CountReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncrResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncrResponse(IncrResponse other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      api_ = other.api_;
      code_ = other.code_;
      error_ = other.error_;
      count_ = other.count_;
      picture_ = other.picture_;
      age_ = other.age_;
      name_ = other.name_;
      gender_ = other.gender_;
      company_ = other.company_;
      email_ = other.email_;
      phone_ = other.phone_;
      address_ = other.address_;
      about_ = other.about_;
      registered_ = other.registered_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      tags_ = other.tags_.Clone();
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncrResponse Clone() {
      return new IncrResponse(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "api" field.</summary>
    public const int ApiFieldNumber = 2;
    private string api_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Api {
      get { return api_; }
      set {
        api_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 4;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 6;
    private string picture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Picture {
      get { return picture_; }
      set {
        picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "age" field.</summary>
    public const int AgeFieldNumber = 7;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 9;
    private string gender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "company" field.</summary>
    public const int CompanyFieldNumber = 10;
    private string company_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Company {
      get { return company_; }
      set {
        company_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 11;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 12;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 13;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "about" field.</summary>
    public const int AboutFieldNumber = 14;
    private string about_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string About {
      get { return about_; }
      set {
        about_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "registered" field.</summary>
    public const int RegisteredFieldNumber = 15;
    private string registered_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Registered {
      get { return registered_; }
      set {
        registered_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 16;
    private float latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 17;
    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(146);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "isActive" field.</summary>
    public const int IsActiveFieldNumber = 19;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncrResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncrResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (Api != other.Api) return false;
      if (Code != other.Code) return false;
      if (Error != other.Error) return false;
      if (Count != other.Count) return false;
      if (Picture != other.Picture) return false;
      if (Age != other.Age) return false;
      if (Name != other.Name) return false;
      if (Gender != other.Gender) return false;
      if (Company != other.Company) return false;
      if (Email != other.Email) return false;
      if (Phone != other.Phone) return false;
      if (Address != other.Address) return false;
      if (About != other.About) return false;
      if (Registered != other.Registered) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (Api.Length != 0) hash ^= Api.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Picture.Length != 0) hash ^= Picture.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (Company.Length != 0) hash ^= Company.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (About.Length != 0) hash ^= About.GetHashCode();
      if (Registered.Length != 0) hash ^= Registered.GetHashCode();
      if (Latitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      hash ^= tags_.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (Api.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Api);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Error);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (Picture.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Picture);
      }
      if (Age != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Age);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Gender);
      }
      if (Company.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Company);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Email);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Phone);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Address);
      }
      if (About.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(About);
      }
      if (Registered.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Registered);
      }
      if (Latitude != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(Latitude);
      }
      if (Longitude != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Longitude);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (IsActive != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsActive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (Api.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Api);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Picture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Picture);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (Company.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Company);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (About.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(About);
      }
      if (Registered.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Registered);
      }
      if (Latitude != 0F) {
        size += 2 + 4;
      }
      if (Longitude != 0F) {
        size += 2 + 4;
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (IsActive != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncrResponse other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.Api.Length != 0) {
        Api = other.Api;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Picture.Length != 0) {
        Picture = other.Picture;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.Company.Length != 0) {
        Company = other.Company;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.About.Length != 0) {
        About = other.About;
      }
      if (other.Registered.Length != 0) {
        Registered = other.Registered;
      }
      if (other.Latitude != 0F) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0F) {
        Longitude = other.Longitude;
      }
      tags_.Add(other.tags_);
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            Api = input.ReadString();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
          case 34: {
            Error = input.ReadString();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 50: {
            Picture = input.ReadString();
            break;
          }
          case 56: {
            Age = input.ReadInt32();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 74: {
            Gender = input.ReadString();
            break;
          }
          case 82: {
            Company = input.ReadString();
            break;
          }
          case 90: {
            Email = input.ReadString();
            break;
          }
          case 98: {
            Phone = input.ReadString();
            break;
          }
          case 106: {
            Address = input.ReadString();
            break;
          }
          case 114: {
            About = input.ReadString();
            break;
          }
          case 122: {
            Registered = input.ReadString();
            break;
          }
          case 133: {
            Latitude = input.ReadFloat();
            break;
          }
          case 141: {
            Longitude = input.ReadFloat();
            break;
          }
          case 146: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 152: {
            IsActive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
